{"ast":null,"code":"var _jsxFileName = \"/Volumes/diskA/workspace/react/autosuggestion-app/src/components/FilesInDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { Table, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport FileDisplay from \"./table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FilesInDisplay = _ref => {\n  _s();\n\n  let {\n    step,\n    setStep,\n    setFiles\n  } = _ref;\n  const [libraryFiles, setLibraryFiles] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [filesSelected, setFilesSelected] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"./fileDetails.json\").then(response => {\n      setLibraryFiles(response.data);\n    }).catch(error => {\n      setError(error);\n    });\n  }, []);\n  useEffect(() => {\n    if (file) {\n      setFileName(`${new Date(file.lastModified).toLocaleDateString()}` + `${file.name}`);\n      setDate(new Date(file.lastModified).toLocaleString());\n    }\n\n    const uplodadedFile = {\n      date: date,\n      fileName: fileName\n    };\n    const currentFiles = filesSelected;\n    currentFiles.push(uplodadedFile);\n    setFilesSelected(currentFiles);\n  }, [file]);\n\n  function onSubmitHandler(event) {\n    event.preventDefault();\n    console.log(\"selected files: \", filesSelected);\n    setFiles(filesSelected);\n    setStep(step + 1);\n  }\n\n  function handleUpload(event) {\n    setFile(event.target.files[0]);\n  }\n\n  useEffect(() => {\n    date && console.log(\"faileName: \", fileName, \"date: \", date);\n  }, [date]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Library Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileDisplay, {\n      libraryFiles: libraryFiles,\n      setFilesSelected: setFilesSelected,\n      filesSelected: filesSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      style: {\n        marginLeft: \"18pc\"\n      },\n      onClick: onSubmitHandler,\n      children: \"Proceed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FilesInDisplay, \"VImPekMyUPutpK46m/nrk6pR+bU=\");\n\n_c = FilesInDisplay;\nexport default FilesInDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilesInDisplay\");","map":{"version":3,"sources":["/Volumes/diskA/workspace/react/autosuggestion-app/src/components/FilesInDisplay.js"],"names":["Table","Button","axios","useEffect","useState","_","FileDisplay","FilesInDisplay","step","setStep","setFiles","libraryFiles","setLibraryFiles","error","setError","filesSelected","setFilesSelected","date","setDate","fileName","setFileName","file","setFile","get","then","response","data","catch","Date","lastModified","toLocaleDateString","name","toLocaleString","uplodadedFile","currentFiles","push","onSubmitHandler","event","preventDefault","console","log","handleUpload","target","files","marginLeft"],"mappings":"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","sourcesContent":["import { Table, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport FileDisplay from \"./table\";\n\nconst FilesInDisplay = ({ step, setStep, setFiles }) => {\n  const [libraryFiles, setLibraryFiles] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [filesSelected, setFilesSelected] = useState([]);\n  const [date, setDate] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n\n  useEffect(() => {\n    axios\n      .get(\"./fileDetails.json\")\n      .then((response) => {\n        setLibraryFiles(response.data);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (file) {\n      setFileName(\n        `${new Date(file.lastModified).toLocaleDateString()}` + `${file.name}`\n      );\n      setDate(new Date(file.lastModified).toLocaleString());\n    }\n\n    const uplodadedFile = { date: date, fileName: fileName };\n    const currentFiles = filesSelected;\n    currentFiles.push(uplodadedFile);\n    setFilesSelected(currentFiles);\n  }, [file]);\n\n  function onSubmitHandler(event) {\n    event.preventDefault();\n    console.log(\"selected files: \", filesSelected);\n    setFiles(filesSelected);\n    setStep(step + 1);\n  }\n  function handleUpload(event) {\n    setFile(event.target.files[0]);\n  }\n  useEffect(() => {\n    date && console.log(\"faileName: \", fileName, \"date: \", date);\n  }, [date]);\n\n  return (\n    <>\n      <h1>Library Files</h1>\n      <FileDisplay\n        libraryFiles={libraryFiles}\n        setFilesSelected={setFilesSelected}\n        filesSelected={filesSelected}\n      />\n      <input type=\"file\" onChange={handleUpload} />\n      <Button\n        type=\"submit\"\n        style={{ marginLeft: \"18pc\" }}\n        onClick={onSubmitHandler}\n      >\n        Proceed\n      </Button>\n    </>\n  );\n};\n\nexport default FilesInDisplay;\n"]},"metadata":{},"sourceType":"module"}