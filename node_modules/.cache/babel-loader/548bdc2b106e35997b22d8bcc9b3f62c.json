{"ast":null,"code":"var _jsxFileName = \"/Volumes/diskA/workspace/react/autosuggestion-app/src/components/file-upload.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FileUpload() {\n  _s();\n\n  const [file, setFile] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n\n  function handleUpload(event) {\n    setFile(event.target.files[0]);\n  }\n\n  useEffect(() => {\n    if (file) {\n      console.log(\"fieeffected\");\n    }\n  }, [file]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"file: \", file.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"File Type: \", file.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"file date Creation:\", \" \", new Date(file.lastModified).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FileUpload, \"If+0qLaIz4XUJPd/xCfpU2DCEdE=\");\n\n_c = FileUpload;\nexport default FileUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"sources":["/Volumes/diskA/workspace/react/autosuggestion-app/src/components/file-upload.js"],"names":["useEffect","useState","FileUpload","file","setFile","date","setDate","fileName","setFileName","handleUpload","event","target","files","console","log","name","type","Date","lastModified","toLocaleDateString"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASQ,YAAT,CAAsBC,KAAtB,EAA6B;AAC3BN,IAAAA,OAAO,CAACM,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAP;AACD;;AAEDZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,IAAJ,EAAU;AACRU,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD;AACF,GAJQ,EAIN,CAACX,IAAD,CAJM,CAAT;AAMA,sBACE;AAAA,4BACE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEM;AAA7B;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,IAAI,iBACH;AAAA,8BACE;AAAA,6BAAUA,IAAI,CAACY,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kCAAeZ,IAAI,CAACa,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,0CACsB,GADtB,EAEG,IAAIC,IAAJ,CAASd,IAAI,CAACe,YAAd,EAA4BC,kBAA5B,EAFH;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA9BQjB,U;;KAAAA,U;AAgCT,eAAeA,UAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction FileUpload() {\n  const [file, setFile] = useState(\"\");\n  const [date, setDate] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n\n  function handleUpload(event) {\n    setFile(event.target.files[0]);\n  }\n\n  useEffect(() => {\n    if (file) {\n      console.log(\"fieeffected\");\n    }\n  }, [file]);\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleUpload} />\n      {file && (\n        <div>\n          <p>file: {file.name}</p>\n          <p>File Type: {file.type}</p>\n          <p>\n            file date Creation:{\" \"}\n            {new Date(file.lastModified).toLocaleDateString()}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default FileUpload;\n"]},"metadata":{},"sourceType":"module"}