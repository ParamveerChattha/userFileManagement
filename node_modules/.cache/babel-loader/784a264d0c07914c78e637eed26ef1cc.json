{"ast":null,"code":"var _jsxFileName = \"/Volumes/diskA/workspace/react/autosuggestion-app/src/components/FilesInDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { Table, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FilesInDisplay = () => {\n  _s();\n\n  const [libraryFiles, setLibraryFiles] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [files, setFiles] = useState();\n  const [filesSelected, setFilesSelected] = useState([]);\n  useEffect(() => {\n    axios.get(\"./fileDetails.json\").then(response => {\n      setLibraryFiles(response.data);\n    }).catch(error => {\n      setError(error);\n    });\n  }, []);\n\n  function handleCheck(value) {\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n\n    if (_.includes(tempFileArray, value)) {\n      const index = tempFileArray.indexOf(value);\n      tempFileArray.splice(index, 1); //   tempFileArray = tempFileArray.filter((item) => _.includes(value, item));\n\n      setFilesSelected(tempFileArray);\n    } else {\n      tempFileArray.push(value);\n      setFilesSelected(tempFileArray);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Library Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: libraryFiles.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"defaultUnchecked\",\n                type: \"checkbox\",\n                data: val,\n                defaultChecked: false,\n                onChange: () => handleCheck(val, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FilesInDisplay, \"VGeg3/RFuUKwdnMhCgE9xX7peqU=\");\n\n_c = FilesInDisplay;\nexport default FilesInDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilesInDisplay\");","map":{"version":3,"sources":["/Volumes/diskA/workspace/react/autosuggestion-app/src/components/FilesInDisplay.js"],"names":["Table","Button","axios","useEffect","useState","_","FilesInDisplay","libraryFiles","setLibraryFiles","error","setError","files","setFiles","filesSelected","setFilesSelected","get","then","response","data","catch","handleCheck","value","tempFileArray","includes","index","indexOf","splice","push","map","val","name","size","date"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,QAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,CAAP,MAAc,QAAd;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCJ,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,EAAlC;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdD,IAAAA,KAAK,CACFa,GADH,CACO,oBADP,EAEGC,IAFH,CAESC,QAAD,IAAc;AAClBT,MAAAA,eAAe,CAACS,QAAQ,CAACC,IAAV,CAAf;AACD,KAJH,EAKGC,KALH,CAKUV,KAAD,IAAW;AAChBC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAPH;AAQD,GATQ,EASN,EATM,CAAT;;AAWA,WAASW,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,QAAIC,aAAa,GAAG,EAApB;AACAA,IAAAA,aAAa,GAAGT,aAAhB;;AACA,QAAIR,CAAC,CAACkB,QAAF,CAAWD,aAAX,EAA0BD,KAA1B,CAAJ,EAAsC;AACpC,YAAMG,KAAK,GAAGF,aAAa,CAACG,OAAd,CAAsBJ,KAAtB,CAAd;AACAC,MAAAA,aAAa,CAACI,MAAd,CAAqBF,KAArB,EAA4B,CAA5B,EAFoC,CAGpC;;AACAV,MAAAA,gBAAgB,CAACQ,aAAD,CAAhB;AACD,KALD,MAKO;AACLA,MAAAA,aAAa,CAACK,IAAd,CAAmBN,KAAnB;AACAP,MAAAA,gBAAgB,CAACQ,aAAD,CAAhB;AACD;AACF;;AAED,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,KAAD;AAAA,8BACE;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA,kBACGf,YAAY,CAACqB,GAAb,CAAiB,CAACC,GAAD,EAAML,KAAN,KAAgB;AAChC,8BACE;AAAA,oCACE;AAAA,wBAAKK,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKD,GAAG,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAKF,GAAG,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,qCACE;AACE,gBAAA,EAAE,EAAC,kBADL;AAEE,gBAAA,IAAI,EAAC,UAFP;AAGE,gBAAA,IAAI,EAAEH,GAHR;AAIE,gBAAA,cAAc,EAAE,KAJlB;AAKE,gBAAA,QAAQ,EAAE,MAAMT,WAAW,CAACS,GAAD,EAAML,KAAN;AAL7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA,aAASA,KAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAgBD,SAjBA;AADH;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eA+BE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YA/BF;AAAA,kBADF;AAmCD,CAjED;;GAAMlB,c;;KAAAA,c;AAmEN,eAAeA,cAAf","sourcesContent":["import { Table, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\n\nconst FilesInDisplay = () => {\n  const [libraryFiles, setLibraryFiles] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [files, setFiles] = useState();\n  const [filesSelected, setFilesSelected] = useState([]);\n  useEffect(() => {\n    axios\n      .get(\"./fileDetails.json\")\n      .then((response) => {\n        setLibraryFiles(response.data);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  }, []);\n\n  function handleCheck(value) {\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n    if (_.includes(tempFileArray, value)) {\n      const index = tempFileArray.indexOf(value);\n      tempFileArray.splice(index, 1);\n      //   tempFileArray = tempFileArray.filter((item) => _.includes(value, item));\n      setFilesSelected(tempFileArray);\n    } else {\n      tempFileArray.push(value);\n      setFilesSelected(tempFileArray);\n    }\n  }\n\n  return (\n    <>\n      <h1>Library Files</h1>\n      <Table>\n        <thead>\n          <tr>\n            <th>File Name</th>\n            <th>File Size</th>\n            <th>Date Created</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraryFiles.map((val, index) => {\n            return (\n              <tr key={index}>\n                <td>{val.name}</td>\n                <td>{val.size}</td>\n                <td>{val.date}</td>\n                <td>\n                  <input\n                    id=\"defaultUnchecked\"\n                    type=\"checkbox\"\n                    data={val}\n                    defaultChecked={false}\n                    onChange={() => handleCheck(val, index)}\n                  />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <Button></Button>\n    </>\n  );\n};\n\nexport default FilesInDisplay;\n"]},"metadata":{},"sourceType":"module"}