{"ast":null,"code":"var _jsxFileName = \"/Volumes/diskA/workspace/react/autosuggestion-app/src/components/InputControl.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useRef, useState } from \"react\";\nimport useOutsideClick from \"../custom-hooks/useOutsideClick\";\nimport _ from \"lodash\";\nimport axios from \"axios\"; // import countries from \"../public/countries.json\";\n\nimport AutoComplete from \"./AutoComplete\";\nimport { Form } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputControl = _ref => {\n  _s();\n\n  let {\n    name,\n    Label,\n    placeholder\n  } = _ref;\n  const [documentRef, isVisible, setIsVisible] = useOutsideClick();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = _.debounce(processRequest, 300);\n  }, []);\n\n  function processRequest(searchValue) {\n    axios.get(\"./countries.json\").then(response => {\n      const countries = response.data;\n      const result = countries.filter(country => country.toLowerCase().includes(searchValue.toLowerCase()));\n      setSuggestions(result);\n      result.length && setIsVisible(true);\n      !result.length && setIsVisible(false);\n      setErrorMsg(\"\");\n    }).catch(e => setErrorMsg(\"error occured in retreiving JSOn File\", e));\n  }\n\n  function handleSearch(event) {\n    event.preventDefault();\n    const {\n      value\n    } = event.target;\n    setSearchTerm(value);\n    ref.current(value);\n  }\n\n  function handleSuggestionClick(countryValue) {\n    setSelectedCountry(countryValue);\n    setIsVisible(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    controlId: \"searchTerm\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: Label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      className: \"input-control\",\n      type: \"text\",\n      value: searchTerm,\n      name: name,\n      onChange: handleSearch,\n      outocomplete: \"off\",\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: documentRef,\n      children: isVisible && /*#__PURE__*/_jsxDEV(AutoComplete, {\n        isVisible: isVisible,\n        suggestions: suggestions,\n        handleSuggestionClick: handleSuggestionClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), selectedCountry && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-country\",\n      children: [\"Your selected country: \", selectedCountry]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), errorMsg && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"errorMsg\",\n      children: errorMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputControl, \"rCXmopzPlf1x4tk/biJ9iTuVolw=\", false, function () {\n  return [useOutsideClick];\n});\n\n_c = InputControl;\nexport default InputControl;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputControl\");","map":{"version":3,"sources":["/Volumes/diskA/workspace/react/autosuggestion-app/src/components/InputControl.js"],"names":["useEffect","useRef","useState","useOutsideClick","_","axios","AutoComplete","Form","InputControl","name","Label","placeholder","documentRef","isVisible","setIsVisible","errorMsg","setErrorMsg","selectedCountry","setSelectedCountry","suggestions","setSuggestions","searchTerm","setSearchTerm","ref","current","debounce","processRequest","searchValue","get","then","response","countries","data","result","filter","country","toLowerCase","includes","length","catch","e","handleSearch","event","preventDefault","value","target","handleSuggestionClick","countryValue"],"mappings":"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","sourcesContent":["import { useEffect, useRef, useState } from \"react\";\nimport useOutsideClick from \"../custom-hooks/useOutsideClick\";\nimport _ from \"lodash\";\nimport axios from \"axios\";\n// import countries from \"../public/countries.json\";\nimport AutoComplete from \"./AutoComplete\";\nimport { Form } from \"react-bootstrap\";\n\nconst InputControl = ({ name, Label, placeholder }) => {\n  const [documentRef, isVisible, setIsVisible] = useOutsideClick();\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [selectedCountry, setSelectedCountry] = useState(\"\");\n  const [suggestions, setSuggestions] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const ref = useRef();\n\n  useEffect(() => {\n    ref.current = _.debounce(processRequest, 300);\n  }, []);\n\n  function processRequest(searchValue) {\n    axios\n      .get(\"./countries.json\")\n      .then((response) => {\n        const countries = response.data;\n        const result = countries.filter((country) =>\n          country.toLowerCase().includes(searchValue.toLowerCase())\n        );\n        setSuggestions(result);\n        result.length && setIsVisible(true);\n        !result.length && setIsVisible(false);\n        setErrorMsg(\"\");\n      })\n      .catch((e) => setErrorMsg(\"error occured in retreiving JSOn File\", e));\n  }\n\n  function handleSearch(event) {\n    event.preventDefault();\n\n    const { value } = event.target;\n    setSearchTerm(value);\n    ref.current(value);\n  }\n\n  function handleSuggestionClick(countryValue) {\n    setSelectedCountry(countryValue);\n    setIsVisible(false);\n  }\n\n  return (\n    <Form.Group controlId=\"searchTerm\">\n      <Form.Label>{Label}</Form.Label>\n      <Form.Control\n        className=\"input-control\"\n        type=\"text\"\n        value={searchTerm}\n        name={name}\n        onChange={handleSearch}\n        outocomplete=\"off\"\n        placeholder={placeholder}\n      />\n      <div ref={documentRef}>\n        {isVisible && (\n          <AutoComplete\n            isVisible={isVisible}\n            suggestions={suggestions}\n            handleSuggestionClick={handleSuggestionClick}\n          />\n        )}\n      </div>\n      {selectedCountry && (\n        <div className=\"selected-country\">\n          Your selected country: {selectedCountry}\n        </div>\n      )}\n      {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n    </Form.Group>\n  );\n};\n\nexport default InputControl;\n"]},"metadata":{},"sourceType":"module"}