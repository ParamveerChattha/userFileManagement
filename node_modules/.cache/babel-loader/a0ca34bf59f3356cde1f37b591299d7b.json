{"ast":null,"code":"var _jsxFileName = \"/Volumes/diskA/workspace/react/autosuggestion-app/src/components/table.js\",\n    _s3 = $RefreshSig$();\n\nimport { Table } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileDisplay = _ref => {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  let {\n    libraryFiles,\n    filesSelected,\n    setFilesSelected,\n    showCheckbox = true,\n    showUpload = false,\n    showCheck = true\n  } = _ref;\n  const [date, setDate] = useState(\"\");\n  const [fileName, setFileName] = useState();\n  const [file, setFile] = useState();\n  const [userFileIncluded, setUserFileIncluded] = useState();\n  useEffect(() => {\n    if (file) {\n      setFileName(`${new Date(file.lastModified).toLocaleDateString()}` + `${file.name}`);\n      setDate(new Date(file.lastModified).toLocaleString().split(\",\")[0]);\n    }\n  }, [file]);\n\n  function handleCheck(value) {\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n\n    if (_.includes(tempFileArray, value)) {\n      const index = tempFileArray.indexOf(value);\n      tempFileArray.splice(index, 1);\n      setFilesSelected(tempFileArray);\n    } else {\n      tempFileArray.push(value);\n      setFilesSelected(tempFileArray);\n    }\n  }\n\n  function handleUpload(event) {\n    setFile(event.target.files[0]);\n  }\n\n  const setForceUpdate = () => {\n    _s();\n\n    const [, setTick] = useState(0);\n    const update = useCallback(() => {\n      setTick(tick => tick + 1);\n    }, []);\n    return update;\n  };\n\n  _s(setForceUpdate, \"C/PHpCb03UdT1Zvs8guPjcg6YZY=\");\n\n  _s2(useEffect(_s2(() => {\n    _s2();\n\n    if (date) {\n      const uplodadedFile = {\n        fileName: fileName,\n        date: date\n      };\n      libraryFiles.push(uplodadedFile);\n      setUserFileIncluded(libraryFiles);\n    }\n\n    useForceUpdate();\n  }, \"alSQ9t+zv4znxzrqgfSJeHP1rEk=\", true), [date]), \"alSQ9t+zv4znxzrqgfSJeHP1rEk=\", true);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: libraryFiles.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: showCheckbox && /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"defaultUnchecked\",\n                type: \"checkbox\",\n                data: val,\n                defaultChecked: false,\n                onChange: () => handleCheck(val, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), showUpload && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s3(FileDisplay, \"iqhLuT9EJgdcjst8bi0nUFCspuQ=\");\n\n_c = FileDisplay;\nexport default FileDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDisplay\");","map":{"version":3,"sources":["/Volumes/diskA/workspace/react/autosuggestion-app/src/components/table.js"],"names":["Table","_","useCallback","useEffect","useState","FileDisplay","libraryFiles","filesSelected","setFilesSelected","showCheckbox","showUpload","showCheck","date","setDate","fileName","setFileName","file","setFile","userFileIncluded","setUserFileIncluded","Date","lastModified","toLocaleDateString","name","toLocaleString","split","handleCheck","value","tempFileArray","includes","index","indexOf","splice","push","handleUpload","event","target","files","setForceUpdate","setTick","update","tick","uplodadedFile","useForceUpdate","map","val"],"mappings":"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","sourcesContent":["import { Table } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport { useCallback, useEffect, useState } from \"react\";\n\nconst FileDisplay = ({\n  libraryFiles,\n  filesSelected,\n  setFilesSelected,\n  showCheckbox = true,\n  showUpload = false,\n  showCheck = true,\n}) => {\n  const [date, setDate] = useState(\"\");\n  const [fileName, setFileName] = useState();\n  const [file, setFile] = useState();\n  const [userFileIncluded, setUserFileIncluded] = useState();\n\n  useEffect(() => {\n    if (file) {\n      setFileName(\n        `${new Date(file.lastModified).toLocaleDateString()}` + `${file.name}`\n      );\n      setDate(new Date(file.lastModified).toLocaleString().split(\",\")[0]);\n    }\n  }, [file]);\n\n  function handleCheck(value) {\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n    if (_.includes(tempFileArray, value)) {\n      const index = tempFileArray.indexOf(value);\n      tempFileArray.splice(index, 1);\n      setFilesSelected(tempFileArray);\n    } else {\n      tempFileArray.push(value);\n      setFilesSelected(tempFileArray);\n    }\n  }\n\n  function handleUpload(event) {\n    setFile(event.target.files[0]);\n  }\n\n  const setForceUpdate = () => {\n    const [, setTick] = useState(0);\n    const update = useCallback(() => {\n      setTick((tick) => tick + 1);\n    }, []);\n    return update;\n  };\n\n  useEffect(() => {\n    if (date) {\n      const uplodadedFile = { fileName: fileName, date: date };\n      libraryFiles.push(uplodadedFile);\n      setUserFileIncluded(libraryFiles);\n    }\n    useForceUpdate();\n  }, [date]);\n\n  return (\n    <div>\n      <Table>\n        <thead>\n          <tr>\n            <th>File Name</th>\n            <th>Date Created</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraryFiles.map((val, index) => {\n            return (\n              <tr key={index}>\n                <td>{val.fileName}</td>\n                <td>{val.date}</td>\n                <td>\n                  {showCheckbox && (\n                    <input\n                      id=\"defaultUnchecked\"\n                      type=\"checkbox\"\n                      data={val}\n                      defaultChecked={false}\n                      onChange={() => handleCheck(val, index)}\n                    />\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      {showUpload && <input type=\"file\" onChange={handleUpload} />}\n    </div>\n  );\n};\n\nexport default FileDisplay;\n"]},"metadata":{},"sourceType":"module"}