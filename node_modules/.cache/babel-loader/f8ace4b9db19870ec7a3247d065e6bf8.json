{"ast":null,"code":"var _jsxFileName = \"/Volumes/diskA/workspace/react/autosuggestion-app/src/components/table.jsx\",\n    _s = $RefreshSig$();\n\nimport { Table } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileDisplay = _ref => {\n  _s();\n\n  let {\n    libraryFiles,\n    filesSelected,\n    setFilesSelected,\n    showCheckbox = true\n  } = _ref;\n\n  function handleCheck(value) {\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n\n    if (_.includes(tempFileArray, value)) {\n      const index = tempFileArray.indexOf(value);\n      tempFileArray.splice(index, 1);\n      setFilesSelected(tempFileArray);\n    } else {\n      tempFileArray.push(value);\n      setFilesSelected(tempFileArray);\n    }\n  }\n\n  function handleUpload(event) {\n    setFile(event.target.files[0]);\n  }\n\n  useEffect(() => {\n    date && console.log(\"faileName: \", fileName, \"date: \", date);\n  }, [date]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: libraryFiles.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: showCheckbox && /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"defaultUnchecked\",\n                type: \"checkbox\",\n                data: val,\n                defaultChecked: false,\n                onChange: () => handleCheck(val, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FileDisplay, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = FileDisplay;\nexport default FileDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDisplay\");","map":{"version":3,"sources":["/Volumes/diskA/workspace/react/autosuggestion-app/src/components/table.jsx"],"names":["Table","_","FileDisplay","libraryFiles","filesSelected","setFilesSelected","showCheckbox","handleCheck","value","tempFileArray","includes","index","indexOf","splice","push","handleUpload","event","setFile","target","files","useEffect","date","console","log","fileName","map","val","name","size"],"mappings":";;;AAAA,SAAQA,KAAR,QAAoB,iBAApB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,MAAMC,WAAW,GAAG,QAAyE;AAAA;;AAAA,MAAxE;AAACC,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA6BC,IAAAA,gBAA7B;AAA+CC,IAAAA,YAAY,GAAG;AAA9D,GAAwE;;AAEvF,WAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC9B,QAAIC,aAAa,GAAG,EAApB;AACAA,IAAAA,aAAa,GAAGL,aAAhB;;AACA,QAAIH,CAAC,CAACS,QAAF,CAAWD,aAAX,EAA0BD,KAA1B,CAAJ,EAAsC;AACpC,YAAMG,KAAK,GAAGF,aAAa,CAACG,OAAd,CAAsBJ,KAAtB,CAAd;AACAC,MAAAA,aAAa,CAACI,MAAd,CAAqBF,KAArB,EAA4B,CAA5B;AACAN,MAAAA,gBAAgB,CAACI,aAAD,CAAhB;AACD,KAJD,MAIO;AACLA,MAAAA,aAAa,CAACK,IAAd,CAAmBN,KAAnB;AACAH,MAAAA,gBAAgB,CAACI,aAAD,CAAhB;AACD;AACF;;AAEC,WAASM,YAAT,CAAsBC,KAAtB,EAA6B;AAC7BC,IAAAA,OAAO,CAACD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAD,CAAP;AACD;;AACDC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,QAA3B,EAAqC,QAArC,EAA+CH,IAA/C,CAAR;AACD,GAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;AAME,sBACI;AAAA,4BACM,QAAC,KAAD;AAAA,8BACN;AAAA,+BACE;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADM,eAQN;AAAA,kBACGlB,YAAY,CAACsB,GAAb,CAAiB,CAACC,GAAD,EAAMf,KAAN,KAAgB;AAChC,8BACE;AAAA,oCACE;AAAA,wBAAKe,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKD,GAAG,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA,wBAAKF,GAAG,CAACL;AAAT;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA,wBACGf,YAAY,iBAAI;AACf,gBAAA,EAAE,EAAC,kBADY;AAEf,gBAAA,IAAI,EAAC,UAFU;AAGf,gBAAA,IAAI,EAAEoB,GAHS;AAIf,gBAAA,cAAc,EAAE,KAJD;AAKf,gBAAA,QAAQ,EAAE,MAAMnB,WAAW,CAACmB,GAAD,EAAMf,KAAN;AALZ;AAAA;AAAA;AAAA;AAAA;AADnB;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA,aAASA,KAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAgBD,SAjBA;AADH;AAAA;AAAA;AAAA;AAAA,cARM;AAAA;AAAA;AAAA;AAAA;AAAA,YADN,eA8BA;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEI;AAA7B;AAAA;AAAA;AAAA;AAAA,YA9BA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCH,CA1DD;;GAAMb,W;;KAAAA,W;AA4DN,eAAeA,WAAf","sourcesContent":["import {Table} from \"react-bootstrap\";\nimport _ from \"lodash\"\n\nconst FileDisplay = ({libraryFiles, filesSelected,setFilesSelected, showCheckbox = true}) => {\n\n      function handleCheck(value) {\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n    if (_.includes(tempFileArray, value)) {\n      const index = tempFileArray.indexOf(value);\n      tempFileArray.splice(index, 1);\n      setFilesSelected(tempFileArray);\n    } else {\n      tempFileArray.push(value);\n      setFilesSelected(tempFileArray);\n    }\n  }\n\n    function handleUpload(event) {\n    setFile(event.target.files[0]);\n  }\n  useEffect(() => {\n    date && console.log(\"faileName: \", fileName, \"date: \", date);\n  }, [date]);\n\n\n\n    return(\n        <div>\n              <Table>\n        <thead>\n          <tr>\n            <th>File Name</th>\n            <th>File Size</th>\n            <th>Date Created</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraryFiles.map((val, index) => {\n            return (\n              <tr key={index}>\n                <td>{val.name}</td>\n                <td>{val.size}</td>\n                <td>{val.date}</td>\n                <td>\n                  {showCheckbox && <input\n                    id=\"defaultUnchecked\"\n                    type=\"checkbox\"\n                    data={val}\n                    defaultChecked={false}\n                    onChange={() => handleCheck(val, index)}\n                  />}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n        <input type=\"file\" onChange={handleUpload} />\n        </div>\n    )\n}\n\nexport default FileDisplay;"]},"metadata":{},"sourceType":"module"}