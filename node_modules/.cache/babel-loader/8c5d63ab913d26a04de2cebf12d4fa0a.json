{"ast":null,"code":"var _jsxFileName = \"/Volumes/diskA/workspace/react/autosuggestion-app/src/components/table.js\",\n    _s = $RefreshSig$();\n\nimport { Table } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileDisplay = _ref => {\n  _s();\n\n  let {\n    libraryFiles,\n    filesSelected,\n    setFilesSelected,\n    showCheckbox = true\n  } = _ref;\n  const [date, setDate] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n  useEffect(() => {\n    if (file) {\n      setFileName(`${new Date(file.lastModified).toLocaleDateString()}` + `${file.name}`);\n      setDate(new Date(file.lastModified).toLocaleString());\n    }\n\n    const uplodadedFile = {\n      date: date,\n      fileName: fileName\n    };\n    const currentFiles = filesSelected;\n    currentFiles.push(uplodadedFile);\n    setFilesSelected(currentFiles);\n    console.log(\"files selected:\", setFilesSelected);\n  }, [file]);\n\n  function handleCheck(value) {\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n\n    if (_.includes(tempFileArray, value)) {\n      const index = tempFileArray.indexOf(value);\n      tempFileArray.splice(index, 1);\n      setFilesSelected(tempFileArray);\n    } else {\n      tempFileArray.push(value);\n      setFilesSelected(tempFileArray);\n    }\n  }\n\n  function handleUpload(event) {\n    setFile(event.target.files[0]);\n  }\n\n  useEffect(() => {\n    date && console.log(\"faileName: \", fileName, \"date: \", date);\n  }, [date]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: libraryFiles.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: showCheckbox && /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"defaultUnchecked\",\n                type: \"checkbox\",\n                data: val,\n                defaultChecked: false,\n                onChange: () => handleCheck(val, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileDisplay, \"Kh+HOZrTgdBnQolsp9Mq+7bbF30=\");\n\n_c = FileDisplay;\nexport default FileDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDisplay\");","map":{"version":3,"sources":["/Volumes/diskA/workspace/react/autosuggestion-app/src/components/table.js"],"names":["Table","_","useState","FileDisplay","libraryFiles","filesSelected","setFilesSelected","showCheckbox","date","setDate","fileName","setFileName","file","setFile","useEffect","Date","lastModified","toLocaleDateString","name","toLocaleString","uplodadedFile","currentFiles","push","console","log","handleCheck","value","tempFileArray","includes","index","indexOf","splice","handleUpload","event","target","files","map","val","size"],"mappings":"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","sourcesContent":["import { Table } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport { useState } from \"react\";\n\nconst FileDisplay = ({\n  libraryFiles,\n  filesSelected,\n  setFilesSelected,\n  showCheckbox = true,\n}) => {\n  const [date, setDate] = useState(\"\");\n  const [fileName, setFileName] = useState(\"\");\n  const [file, setFile] = useState(\"\");\n\n  useEffect(() => {\n    if (file) {\n      setFileName(\n        `${new Date(file.lastModified).toLocaleDateString()}` + `${file.name}`\n      );\n      setDate(new Date(file.lastModified).toLocaleString());\n    }\n\n    const uplodadedFile = { date: date, fileName: fileName };\n    const currentFiles = filesSelected;\n    currentFiles.push(uplodadedFile);\n    setFilesSelected(currentFiles);\n    console.log(\"files selected:\", setFilesSelected);\n  }, [file]);\n\n  function handleCheck(value) {\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n    if (_.includes(tempFileArray, value)) {\n      const index = tempFileArray.indexOf(value);\n      tempFileArray.splice(index, 1);\n      setFilesSelected(tempFileArray);\n    } else {\n      tempFileArray.push(value);\n      setFilesSelected(tempFileArray);\n    }\n  }\n\n  function handleUpload(event) {\n    setFile(event.target.files[0]);\n  }\n  useEffect(() => {\n    date && console.log(\"faileName: \", fileName, \"date: \", date);\n  }, [date]);\n\n  return (\n    <div>\n      <Table>\n        <thead>\n          <tr>\n            <th>File Name</th>\n            <th>File Size</th>\n            <th>Date Created</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraryFiles.map((val, index) => {\n            return (\n              <tr key={index}>\n                <td>{val.name}</td>\n                <td>{val.size}</td>\n                <td>{val.date}</td>\n                <td>\n                  {showCheckbox && (\n                    <input\n                      id=\"defaultUnchecked\"\n                      type=\"checkbox\"\n                      data={val}\n                      defaultChecked={false}\n                      onChange={() => handleCheck(val, index)}\n                    />\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      <input type=\"file\" onChange={handleUpload} />\n    </div>\n  );\n};\n\nexport default FileDisplay;\n"]},"metadata":{},"sourceType":"module"}