{"ast":null,"code":"var _jsxFileName = \"/Volumes/diskA/workspace/react/autosuggestion-app/src/components/table.jsx\";\nimport { Table } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileDisplay = _ref => {\n  let {\n    libraryFiles,\n    filesSelected,\n    setFilesSelected,\n    setFileName,\n    setDate,\n    showCheckbox = true\n  } = _ref;\n\n  function handleCheck(value) {\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n\n    if (_.includes(tempFileArray, value)) {\n      const index = tempFileArray.indexOf(value);\n      tempFileArray.splice(index, 1); //   tempFileArray = tempFileArray.filter((item) => _.includes(value, item));\n\n      setFilesSelected(tempFileArray);\n    } else {\n      tempFileArray.push(value);\n      setFilesSelected(tempFileArray);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"File Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"File Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date Created\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: libraryFiles.map((val, index) => {\n        return /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.size\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: val.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: showCheckbox && /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"defaultUnchecked\",\n              type: \"checkbox\",\n              data: val,\n              defaultChecked: false,\n              onChange: () => handleCheck(val, index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 15\n  }, this);\n};\n\n_c = FileDisplay;\nexport default FileDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDisplay\");","map":{"version":3,"sources":["/Volumes/diskA/workspace/react/autosuggestion-app/src/components/table.jsx"],"names":["Table","_","FileDisplay","libraryFiles","filesSelected","setFilesSelected","setFileName","setDate","showCheckbox","handleCheck","value","tempFileArray","includes","index","indexOf","splice","push","map","val","name","size","date"],"mappings":";AAAA,SAAQA,KAAR,QAAoB,iBAApB;AACA,OAAOC,CAAP,MAAc,QAAd;;;AAEA,MAAMC,WAAW,GAAG,QAA8F;AAAA,MAA7F;AAACC,IAAAA,YAAD;AAAeC,IAAAA,aAAf;AAA6BC,IAAAA,gBAA7B;AAA8CC,IAAAA,WAA9C;AAA2DC,IAAAA,OAA3D;AAAoEC,IAAAA,YAAY,GAAG;AAAnF,GAA6F;;AAE5G,WAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC9B,QAAIC,aAAa,GAAG,EAApB;AACAA,IAAAA,aAAa,GAAGP,aAAhB;;AACA,QAAIH,CAAC,CAACW,QAAF,CAAWD,aAAX,EAA0BD,KAA1B,CAAJ,EAAsC;AACpC,YAAMG,KAAK,GAAGF,aAAa,CAACG,OAAd,CAAsBJ,KAAtB,CAAd;AACAC,MAAAA,aAAa,CAACI,MAAd,CAAqBF,KAArB,EAA4B,CAA5B,EAFoC,CAGpC;;AACAR,MAAAA,gBAAgB,CAACM,aAAD,CAAhB;AACD,KALD,MAKO;AACLA,MAAAA,aAAa,CAACK,IAAd,CAAmBN,KAAnB;AACAL,MAAAA,gBAAgB,CAACM,aAAD,CAAhB;AACD;AACF;;AACC,sBACU,QAAC,KAAD;AAAA,4BACN;AAAA,6BACE;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADM,eAQN;AAAA,gBACGR,YAAY,CAACc,GAAb,CAAiB,CAACC,GAAD,EAAML,KAAN,KAAgB;AAChC,4BACE;AAAA,kCACE;AAAA,sBAAKK,GAAG,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA,sBAAKD,GAAG,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAA,sBAAKF,GAAG,CAACG;AAAT;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,sBACGb,YAAY,iBAAI;AACf,cAAA,EAAE,EAAC,kBADY;AAEf,cAAA,IAAI,EAAC,UAFU;AAGf,cAAA,IAAI,EAAEU,GAHS;AAIf,cAAA,cAAc,EAAE,KAJD;AAKf,cAAA,QAAQ,EAAE,MAAMT,WAAW,CAACS,GAAD,EAAML,KAAN;AALZ;AAAA;AAAA;AAAA;AAAA;AADnB;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAASA,KAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAgBD,OAjBA;AADH;AAAA;AAAA;AAAA;AAAA,YARM;AAAA;AAAA;AAAA;AAAA;AAAA,UADV;AA+BH,CA9CD;;KAAMX,W;AAgDN,eAAeA,WAAf","sourcesContent":["import {Table} from \"react-bootstrap\";\nimport _ from \"lodash\"\n\nconst FileDisplay = ({libraryFiles, filesSelected,setFilesSelected,setFileName, setDate, showCheckbox = true}) => {\n\n      function handleCheck(value) {\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n    if (_.includes(tempFileArray, value)) {\n      const index = tempFileArray.indexOf(value);\n      tempFileArray.splice(index, 1);\n      //   tempFileArray = tempFileArray.filter((item) => _.includes(value, item));\n      setFilesSelected(tempFileArray);\n    } else {\n      tempFileArray.push(value);\n      setFilesSelected(tempFileArray);\n    }\n  }\n    return(\n              <Table>\n        <thead>\n          <tr>\n            <th>File Name</th>\n            <th>File Size</th>\n            <th>Date Created</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraryFiles.map((val, index) => {\n            return (\n              <tr key={index}>\n                <td>{val.name}</td>\n                <td>{val.size}</td>\n                <td>{val.date}</td>\n                <td>\n                  {showCheckbox && <input\n                    id=\"defaultUnchecked\"\n                    type=\"checkbox\"\n                    data={val}\n                    defaultChecked={false}\n                    onChange={() => handleCheck(val, index)}\n                  />}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    )\n}\n\nexport default FileDisplay;"]},"metadata":{},"sourceType":"module"}