{"ast":null,"code":"var _jsxFileName = \"/Volumes/diskA/workspace/react/autosuggestion-app/src/components/FilesInDisplay.js\",\n    _s = $RefreshSig$();\n\nimport { Table } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst FilesInDisplay = () => {\n  _s();\n\n  const [libraryFiles, setLibraryFiles] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [files, setFiles] = useState();\n  const [fileSeletedStatus, setFileSelectedStatus] = useState(false);\n  const [filesSelected, setFilesSelected] = useState([]);\n  useEffect(() => {\n    axios.get(\"./fileDetails.json\").then(response => {\n      setLibraryFiles(response.data);\n    }).catch(error => {\n      setError(error);\n    });\n  }, []);\n\n  function handleCheck(value, index) {\n    if (_.includes(filesSelected, value)) {\n      tempFileArray = filesSelected;\n      tempFileArray.pop(value);\n      setFilesSelected(tempFileArray);\n      console.log(\"filesSelected handleCheck function when its INCLUDED: \", filesSelected);\n    }\n\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n    tempFileArray.push(value);\n    setFilesSelected(tempFileArray);\n    setFileSelectedStatus(true);\n    console.log(\"filesSelected handleCheck function when its CHECKED: \", filesSelected); // const tempFileArray = filesSelected;\n    // tempFileArray.pop(value);\n    // setFilesSelected(tempFileArray);\n    // setFileSelectedStatus(false);\n    // console.log(\n    //   \"filesSelected handleCheck function when its UNchecked: \",\n    //   filesSelected\n    // );\n  }\n\n  useEffect(() => {\n    console.log(\"filesSelected:::: the Array Object \", filesSelected);\n    setFiles(filesSelected);\n    console.log(\"files::::\", files);\n  }, [fileSeletedStatus]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Library Files\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: libraryFiles.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.size\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"defaultUnchecked\",\n                type: \"checkbox\",\n                data: val,\n                defaultChecked: false,\n                state: false,\n                onChange: () => handleCheck(val, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(FilesInDisplay, \"txOPz9eOjkG3o+FF3T+TwaaNpVk=\");\n\n_c = FilesInDisplay;\nexport default FilesInDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"FilesInDisplay\");","map":{"version":3,"sources":["/Volumes/diskA/workspace/react/autosuggestion-app/src/components/FilesInDisplay.js"],"names":["Table","axios","useEffect","useState","_","FilesInDisplay","libraryFiles","setLibraryFiles","error","setError","files","setFiles","fileSeletedStatus","setFileSelectedStatus","filesSelected","setFilesSelected","get","then","response","data","catch","handleCheck","value","index","includes","tempFileArray","pop","console","log","push","map","val","name","size","date"],"mappings":"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","sourcesContent":["import { Table } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport _ from \"lodash\";\n\nconst FilesInDisplay = () => {\n  const [libraryFiles, setLibraryFiles] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [files, setFiles] = useState();\n  const [fileSeletedStatus, setFileSelectedStatus] = useState(false);\n  const [filesSelected, setFilesSelected] = useState([]);\n  useEffect(() => {\n    axios\n      .get(\"./fileDetails.json\")\n      .then((response) => {\n        setLibraryFiles(response.data);\n      })\n      .catch((error) => {\n        setError(error);\n      });\n  }, []);\n\n  function handleCheck(value, index) {\n    if (_.includes(filesSelected, value)) {\n      tempFileArray = filesSelected;\n      tempFileArray.pop(value);\n      setFilesSelected(tempFileArray);\n      console.log(\n        \"filesSelected handleCheck function when its INCLUDED: \",\n        filesSelected\n      );\n    }\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n    tempFileArray.push(value);\n    setFilesSelected(tempFileArray);\n    setFileSelectedStatus(true);\n    console.log(\n      \"filesSelected handleCheck function when its CHECKED: \",\n      filesSelected\n    );\n\n    // const tempFileArray = filesSelected;\n    // tempFileArray.pop(value);\n    // setFilesSelected(tempFileArray);\n    // setFileSelectedStatus(false);\n    // console.log(\n    //   \"filesSelected handleCheck function when its UNchecked: \",\n    //   filesSelected\n    // );\n  }\n\n  useEffect(() => {\n    console.log(\"filesSelected:::: the Array Object \", filesSelected);\n    setFiles(filesSelected);\n    console.log(\"files::::\", files);\n  }, [fileSeletedStatus]);\n\n  return (\n    <>\n      <h1>Library Files</h1>\n      <Table>\n        <thead>\n          <tr>\n            <th>File Name</th>\n            <th>File Size</th>\n            <th>Date Created</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraryFiles.map((val, index) => {\n            return (\n              <tr key={index}>\n                <td>{val.name}</td>\n                <td>{val.size}</td>\n                <td>{val.date}</td>\n                <td>\n                  <input\n                    id=\"defaultUnchecked\"\n                    type=\"checkbox\"\n                    data={val}\n                    defaultChecked={false}\n                    state={false}\n                    onChange={() => handleCheck(val, index)}\n                  />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n    </>\n  );\n};\n\nexport default FilesInDisplay;\n"]},"metadata":{},"sourceType":"module"}