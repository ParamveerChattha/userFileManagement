{"ast":null,"code":"var _jsxFileName = \"/Volumes/diskA/workspace/react/user_file_management/src/components/table/table.js\",\n    _s = $RefreshSig$();\n\nimport { Table } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport styles from \"./table.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FileDisplay = _ref => {\n  _s();\n\n  let {\n    libraryFiles,\n    filesSelected,\n    setFilesSelected,\n    showCheckbox = true,\n    showUpload = false\n  } = _ref;\n  const [file, setFile] = useState();\n  const [, setUserFileIncluded] = useState();\n  useEffect(() => {}, [file]);\n\n  function handleCheck(value) {\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n\n    if (_.includes(tempFileArray, value)) {\n      const index = tempFileArray.indexOf(value);\n      tempFileArray.splice(index, 1);\n      setFilesSelected(tempFileArray);\n    } else {\n      tempFileArray.push(value);\n      setFilesSelected(tempFileArray);\n    }\n  }\n\n  function handleUpload(event) {\n    const localFileData = event.target.files[0];\n    setFile(event.target.files[0]);\n    const fileName = `${new Date(localFileData.lastModified).toLocaleDateString()}` + `${localFileData.name}`;\n    const date = new Date(localFileData.lastModified).toLocaleString().split(\",\")[0];\n    const uplodadedFile = {\n      fileName: fileName,\n      date: date\n    };\n    libraryFiles.push(uplodadedFile);\n    setUserFileIncluded(libraryFiles);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Table,\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"File Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Date Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: libraryFiles.map((val, index) => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: showCheckbox && /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"defaultUnchecked\",\n                type: \"checkbox\",\n                data: val,\n                defaultChecked: false,\n                onChange: () => handleCheck(val, index)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), showUpload && /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FileDisplay, \"XzMtIFYNw+60WuUw9NIroSVtf8s=\");\n\n_c = FileDisplay;\nexport default FileDisplay;\n\nvar _c;\n\n$RefreshReg$(_c, \"FileDisplay\");","map":{"version":3,"sources":["/Volumes/diskA/workspace/react/user_file_management/src/components/table/table.js"],"names":["Table","_","useEffect","useState","styles","FileDisplay","libraryFiles","filesSelected","setFilesSelected","showCheckbox","showUpload","file","setFile","setUserFileIncluded","handleCheck","value","tempFileArray","includes","index","indexOf","splice","push","handleUpload","event","localFileData","target","files","fileName","Date","lastModified","toLocaleDateString","name","date","toLocaleString","split","uplodadedFile","map","val"],"mappings":"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","sourcesContent":["import { Table } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport { useEffect, useState } from \"react\";\nimport styles from \"./table.module.scss\";\n\nconst FileDisplay = ({\n  libraryFiles,\n  filesSelected,\n  setFilesSelected,\n  showCheckbox = true,\n  showUpload = false,\n}) => {\n  const [file, setFile] = useState();\n  const [, setUserFileIncluded] = useState();\n\n  useEffect(() => {}, [file]);\n\n  function handleCheck(value) {\n    let tempFileArray = [];\n    tempFileArray = filesSelected;\n    if (_.includes(tempFileArray, value)) {\n      const index = tempFileArray.indexOf(value);\n      tempFileArray.splice(index, 1);\n      setFilesSelected(tempFileArray);\n    } else {\n      tempFileArray.push(value);\n      setFilesSelected(tempFileArray);\n    }\n  }\n\n  function handleUpload(event) {\n    const localFileData = event.target.files[0];\n    setFile(event.target.files[0]);\n\n    const fileName =\n      `${new Date(localFileData.lastModified).toLocaleDateString()}` +\n      `${localFileData.name}`;\n\n    const date = new Date(localFileData.lastModified)\n      .toLocaleString()\n      .split(\",\")[0];\n\n    const uplodadedFile = { fileName: fileName, date: date };\n    libraryFiles.push(uplodadedFile);\n    setUserFileIncluded(libraryFiles);\n  }\n  return (\n    <div className={styles.Table}>\n      <Table>\n        <thead>\n          <tr>\n            <th>File Name</th>\n            <th>Date Created</th>\n          </tr>\n        </thead>\n        <tbody>\n          {libraryFiles.map((val, index) => {\n            return (\n              <tr key={index}>\n                <td>{val.fileName}</td>\n                <td>{val.date}</td>\n                <td>\n                  {showCheckbox && (\n                    <input\n                      id=\"defaultUnchecked\"\n                      type=\"checkbox\"\n                      data={val}\n                      defaultChecked={false}\n                      onChange={() => handleCheck(val, index)}\n                    />\n                  )}\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </Table>\n      {showUpload && <input type=\"file\" onChange={handleUpload} />}\n    </div>\n  );\n};\n\nexport default FileDisplay;\n"]},"metadata":{},"sourceType":"module"}